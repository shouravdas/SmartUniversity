/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diu.desk;

import com.sbix.jnotify.NPosition;
import com.sbix.jnotify.NoticeWindow;
import java.awt.Color;
import java.io.File;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

 
public class ConfirmationPassword extends javax.swing.JFrame {
    Connection con = null;
     Statement statement = null;
     PreparedStatement pStatement = null;
     ResultSet rs = null;
     String user_name;
    /**
     * Creates new form ConfirmationPassword
     */
    public ConfirmationPassword() {
        initComponents();
         con = ConnectionFactory.getMysqlConnection();
         ReadUserName();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        ConfirmBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Password Confirmation ");
        setAlwaysOnTop(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 69, 79));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Your Password");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 170, 31));

        password.setText("                                                  ");
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
        });
        password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordMouseClicked(evt);
            }
        });
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 170, 30));

        ConfirmBtn.setText("Confirm");
        ConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmBtnActionPerformed(evt);
            }
        });
        jPanel1.add(ConfirmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 220));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordMouseClicked
       password.setText("");
    }//GEN-LAST:event_passwordMouseClicked

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        password.setText("");
    }//GEN-LAST:event_passwordFocusGained
void ReadUserName(){
        File file=new File("user_name.txt");
        try{
            Scanner input=new Scanner(file);
            user_name=input.nextLine();            
        }catch(Exception ec){
            System.out.printf("Error %s",ec);
        }
    }  
    private void ConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmBtnActionPerformed
        
      
            String password = new String(this.password.getPassword());
        try{
             String loginCheck="SELECT userName,password,salt_value,admin_type FROM adminlogin WHERE userName=? ";         
             pStatement=con.prepareStatement(loginCheck);   
                
                 pStatement.setString(1,user_name);                 
                  rs=pStatement.executeQuery();
                      
             if(rs.next()){ 
              String securepassword=rs.getString("password");
              String salt=rs.getString("salt_value");                             
               boolean passwordMatch=PasswordManager.verifyUserPassword(password,securepassword,salt);
                 if(passwordMatch){
                   updateSemester();
                   DeleteBatch();
                   CurrentDate();
                 this.dispose();
                 }
             }
        }   catch(Exception excp){
                     
                 
        }      
    }//GEN-LAST:event_ConfirmBtnActionPerformed
 
    public void CurrentDate(){
         DateFormat dateFormat = new SimpleDateFormat("dd MM yyyy");
	Date date = new Date();
        File file=new File("save_date.txt");
        try{
            PrintWriter out=new PrintWriter(file);
            out.println(dateFormat.format(date));
            out.close();
        }catch(Exception ex){
            System.out.printf("Error %s\n", ex);
        }
  
    }
    public void DeleteBatch(){
        
           try{
              pStatement=con.prepareStatement("DELETE FROM batchinfo WHERE semester='13' ORDER BY semester");                      
              pStatement.executeUpdate();
              new NoticeWindow(Color.green, "Batch Remove Successful", 002, NPosition.TOP_RIGHT);            
        }
           catch(Exception exce){
               new NoticeWindow(Color.red, " Remove Failed", 001, NPosition.TOP_RIGHT);
           } 
            }
 
 
 public void updateSemester(){
                       try{
                        String updateMessage2= "UPDATE batchinfo SET semester=semester+1 ORDER BY semester";
                        pStatement=con.prepareStatement(updateMessage2);                                               
                        pStatement.executeUpdate();                       
                    }

                        catch(Exception excp){
                            System.out.println("Error"+excp);
                        }
            
            }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmationPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmationPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmationPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmationPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmationPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfirmBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField password;
    // End of variables declaration//GEN-END:variables
}
