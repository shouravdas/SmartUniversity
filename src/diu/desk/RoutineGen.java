/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diu.desk;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

 
public class RoutineGen extends javax.swing.JFrame {
String Role="";
    Connection con = null;
     Statement statement = null;
     PreparedStatement pStatement = null;
     ResultSet rs = null;
     private static final DateFormat currentDate = new SimpleDateFormat("dd-MM-yyyy HH-mm-ss");
     Date date = new Date();
     String Location=System.getProperty("user.home")+"\\Desktop\\PDF\\";
     Document doc;
     Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, BaseColor.BLACK);
     PdfPTable table;
     String batchName;
     ArrayList batchList=new ArrayList();
     String batchGroupNo;
     ArrayList batchGroupList=new ArrayList();
     String semesterNo; //to generate teachers load
     ArrayList semesterList =new ArrayList(); 
     String subjectName;
     ArrayList subjectList =new ArrayList();
     String subjectCode;
     ArrayList subjectCodeList=new ArrayList();
     String teachersName;
     ArrayList teachersList=new ArrayList();
     String tName;
     String semester_no;// to do semester update 
      RoutineData rd= new RoutineData();
      
      
    public RoutineGen(String role) {
        initComponents();  
         this.Role=role;
        con = ConnectionFactory.getMysqlConnection();
        GetBatchInfo();
        GetCourseInfo();
        GetTechersInfo();
    }

    private RoutineGen() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
        public void GetBatchInfo(){
              //  Get data from batch info to retrive data for use for Teachers load 
        try {
           
           pStatement=con.prepareStatement("SELECT * FROM batchinfo WHERE semester <=12");
           rs=pStatement.executeQuery();
           while(rs.next()){
              batchName=rs.getString("batch");
                batchList.add(batchName);
                batchGroupNo=rs.getString("s_group");
                batchGroupList.add(batchGroupNo);
                semesterNo=rs.getString("semester");
                semesterList.add(semesterNo);
               
           }
       } catch (Exception exx) {
           JOptionPane.showMessageDialog(null, "Error: "+exx);
       }
        }
        public void GetCourseInfo(){
             //  Get data from course info to retrive Course code sort by batch semester data for use for Teachers load 
        
       
            try{
            pStatement=con.prepareStatement("SELECT * FROM courseinfo");
             rs=pStatement.executeQuery();
              while(rs.next()){
                  subjectCode=rs.getString("course_code");
                  subjectCodeList.add(subjectCode);
                
              }
               
            }
            catch(Exception Scode){
                JOptionPane.showMessageDialog(null, "Error "+Scode);
            }
        }
        public void GetTechersInfo(){
             //Get Teachers name for genearte Teachers load
            
             try{
            pStatement=con.prepareStatement("SELECT * FROM teachersinfo");
             rs=pStatement.executeQuery();
              while(rs.next()){
                  tName=rs.getString("tname");
                  teachersList.add(tName);
                
              }
               
            }
            catch(Exception Scode){
               JOptionPane.showMessageDialog(null, "Error"+Scode);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CourseDistributionL = new javax.swing.JLabel();
        CourseExport = new javax.swing.JButton();
        RoutineExport = new javax.swing.JButton();
        TeachersLoad = new javax.swing.JButton();
        NewRoutine = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        CourseDistributionL1 = new javax.swing.JLabel();
        CourseDistributionL2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PDF Export Center");
        setBackground(new java.awt.Color(0, 69, 79));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 69, 79));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CourseDistributionL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/routine.png"))); // NOI18N
        jPanel1.add(CourseDistributionL, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 130, 140));

        CourseExport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CourseExport.setText("Export Course Distribution");
        CourseExport.setMargin(new java.awt.Insets(2, 2, 2, 2));
        CourseExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseExportActionPerformed(evt);
            }
        });
        jPanel1.add(CourseExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 190, 40));

        RoutineExport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RoutineExport.setText("Export Routine");
        RoutineExport.setMargin(new java.awt.Insets(2, 2, 2, 2));
        RoutineExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoutineExportActionPerformed(evt);
            }
        });
        jPanel1.add(RoutineExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 190, 40));

        TeachersLoad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TeachersLoad.setText("Export Teachers' Load");
        TeachersLoad.setMargin(new java.awt.Insets(2, 2, 2, 2));
        TeachersLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeachersLoadActionPerformed(evt);
            }
        });
        jPanel1.add(TeachersLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 190, 40));

        NewRoutine.setBackground(java.awt.Color.red);
        NewRoutine.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        NewRoutine.setForeground(new java.awt.Color(255, 255, 255));
        NewRoutine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/routine sm.png"))); // NOI18N
        NewRoutine.setText("Generate New Routine");
        NewRoutine.setMargin(new java.awt.Insets(2, 2, 2, 2));
        NewRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRoutineActionPerformed(evt);
            }
        });
        jPanel1.add(NewRoutine, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 260, 60));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/export.png"))); // NOI18N
        jLabel1.setText("PDF Export Center");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 350, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, 40));

        CourseDistributionL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cd_120px.png"))); // NOI18N
        jPanel1.add(CourseDistributionL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 130, 140));

        CourseDistributionL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TL Big.png"))); // NOI18N
        CourseDistributionL2.setToolTipText("");
        jPanel1.add(CourseDistributionL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 130, 140));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TeachersLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeachersLoadActionPerformed
       ExportTL();
    }//GEN-LAST:event_TeachersLoadActionPerformed

    private void RoutineExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoutineExportActionPerformed
        try {
            GenRoutine rg=new GenRoutine();
            rg.RoutineGen();
        } catch (IOException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RoutineExportActionPerformed

    private void CourseExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseExportActionPerformed
        ExportCD();
    }//GEN-LAST:event_CourseExportActionPerformed

    private void NewRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRoutineActionPerformed
      NewRoutine nr=new NewRoutine(Role);
      nr.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_NewRoutineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Home hm=new Home(Role);
        hm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
        public void ExportCD(){
             File file=new File(Location);
            if(!file.exists())
            {
                file.mkdir();
            }
            try{
                doc =new Document(PageSize.A4,10,10,50,50);
            PdfWriter writer = PdfWriter.getInstance(doc,new FileOutputStream(Location+"CourseDistribution - "+currentDate.format(date)+".pdf"));
            doc.open();
            table=new PdfPTable(4);
            float [] colwidth=new float[]{5f,18f,40f,35f};
            table.setWidths(colwidth);
            table.setKeepTogether(true);
            }
            catch(Exception ec){ 
                JOptionPane.showMessageDialog(this, "Error "+ec);
            }            
// Export course distribution pdf   
    
        try {
            Paragraph p1= new Paragraph("Dhaka International University\n" +
            "Faculty of Science & Engineering\n" 
                            +"Program: B.Sc. in CSE\n"
                            +"Shift: Evening (Summer-2019)\n"+"Course Distribution Sheet\n\n");
                    
            
            p1.setAlignment(Paragraph.ALIGN_CENTER);
             doc.add(p1);
        } catch (DocumentException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
      
        for(int i=0;i<batchGroupList.size();i++){
       // data.setBatch((String) batchList.get(i));
        String bGroup=(String)batchGroupList.get(i);
           String sem=(String)semesterList.get(i); 
            System.out.println(batchList.get(i));
           // System.out.println(data);
            
            try{
            
            
            Paragraph p2= new Paragraph("Batch: "+batchList.get(i)+"   Semester: "+sem+"   Dept. of CSE\n\n");
            Paragraph p3= new Paragraph("Sl.");
            Paragraph p4= new Paragraph("Course Code");
            Paragraph p5= new Paragraph("Course Title");
            Paragraph p6= new Paragraph("Teacher's Name");
            
             
             p2.setAlignment(Paragraph.ALIGN_CENTER);
            PdfPCell cell2 = new PdfPCell();
             cell2.setColspan(4);
        
           cell2.addElement(p2);
           
            table.addCell(cell2);
            table.addCell(p3);
            table.addCell(p4);
            table.addCell(p5);
            table.addCell(p6);
            }
            catch(Exception ecp){
                
            }
            
            
            
            int sl=1;
           for(int k=0;k<subjectCodeList.size();k++){
               String sCode=(String)subjectCodeList.get(k);
               
               try{
           pStatement=con.prepareStatement("SELECT * FROM courseinfo WHERE '"+bGroup+"'=?"+" and course_code=? and semester=?");
          
          pStatement.setString(1,bGroup);          
          pStatement.setString(2,sCode);
          pStatement.setString(3,sem);
           rs=pStatement.executeQuery();
           while(rs.next()){
                           
            table.addCell(String.valueOf(sl));    
            table.addCell((String)subjectCodeList.get(k));  //subject code
            table.addCell(rs.getString("course_title"));
            table.addCell(rs.getString(bGroup)); //teacher's name
            
            sl++;
            
             
           }
      
           }
                catch(Exception excep){
                    System.out.println("Error");
           }
               
           }
                try {
                 
                    doc.add(table);
                    table.flushContent();
                    doc.add(new Paragraph("\n\n"));      
                    // doc.newPage(); 
                } catch (DocumentException ex) {
                    Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                }
       }
        
        
         doc.close();
         JOptionPane.showMessageDialog(null, "PDF Created Successfully");
        try {
            Desktop.getDesktop().open(new java.io.File(Location+"CourseDistribution - "+currentDate.format(date)+".pdf"));
        } catch (IOException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
        }
        public void ExportTL(){
            File file=new File(Location);
                if(!file.exists())
                {
                    file.mkdir();
                }
            
            try{
                
                doc =new Document(PageSize.A4,10,10,50,50);
                PdfWriter writer = PdfWriter.getInstance(doc,new FileOutputStream(Location+"Teachers' load - "+currentDate.format(date)+".pdf"));
                doc.open();
                table=new PdfPTable(5);
                float[] colwidth=new float[]{5f,18f,40f,22f,15f};
                table.setWidths(colwidth);    
// Export TEACHER's LOAD pdf 
                for(int i=0;i<teachersList.size();i++)
                {
            
                    Paragraph p1= new Paragraph("Dhaka International University",font);
                    Paragraph p2= new Paragraph("Faculty of Science & Engineering\n" 
                            +"Program: B.Sc. in CSE\n"
                            +"Shift: Evening (Summer-2019)\n"+"Teacher's Load\n" 
                            +"Name of Teacher: "+(String)teachersList.get(i)+"\n\n");
                    
                    Paragraph p3= new Paragraph("Course Code");
                    Paragraph p4= new Paragraph("Course Name");
                    Paragraph p5= new Paragraph("Semester/Batch");
                    Paragraph p6= new Paragraph("Credit Hour");

                    p1.setAlignment(Paragraph.ALIGN_CENTER);
                    p2.setAlignment(Paragraph.ALIGN_CENTER);

                    doc.add(p1);
                    doc.add(p2);
                    table.addCell("Sl.");
                    table.addCell(p3);
                    table.addCell(p4);
                    table.addCell(p5);
                    table.addCell(p6);
            int sl=1;
            int totalCredit = 0;
       
               int L=1;
                    for(L=1;L<6;L++){
 
                     pStatement=con.prepareStatement(" SELECT course_code, course_title, semester, credit FROM courseinfo WHERE batch_group"+L+"=?");
                     pStatement.setString(1,(String)teachersList.get(i)); 
                     rs=pStatement.executeQuery();

                     while(rs.next()){
                            table.addCell(String.valueOf(sl));    
                            table.addCell(rs.getString("course_code"));
                            table.addCell(rs.getString("course_title"));


                          //Finding semester & Batch
                           pStatement=con.prepareStatement("select batch from batchinfo where semester=? and s_group='batch_group"+L+"'");
                           pStatement.setString(1,rs.getString("semester")); 
                           ResultSet res = pStatement.executeQuery();

                           while(res.next()){
                           table.addCell(rs.getString("semester")+" / "+res.getString("batch"));
                           }


                            table.addCell(String.valueOf(rs.getInt("credit")));
                            totalCredit+=rs.getInt("credit");
                            sl++;
                      }
                    }

                      table.addCell("");    
                      table.addCell("");
                      table.addCell("");
                      table.addCell("Total=");
                      table.addCell(String.valueOf(totalCredit));
                    doc.add(table);
                    table.flushContent();
                    
                   // doc.add(new Paragraph("\n\nClass Starting Date:\nClass Closing Date:"));
                   // doc.add(new Paragraph("\n\n\n\n----------------------------------\nName of the Program Officer"));

                    doc.newPage();
       
           }
         doc.close();
         JOptionPane.showMessageDialog(null, "PDF Created Successfully");
          try {
            Desktop.getDesktop().open(new java.io.File(Location+"Teachers' load - "+currentDate.format(date)+".pdf"));
        } catch (IOException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoutineGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoutineGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoutineGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoutineGen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoutineGen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CourseDistributionL;
    private javax.swing.JLabel CourseDistributionL1;
    private javax.swing.JLabel CourseDistributionL2;
    private javax.swing.JButton CourseExport;
    private javax.swing.JButton NewRoutine;
    private javax.swing.JButton RoutineExport;
    private javax.swing.JButton TeachersLoad;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
